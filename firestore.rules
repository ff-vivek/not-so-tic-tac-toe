rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isParticipant(data) {
      return isSignedIn() &&
        (request.auth.uid == data.playerXId || request.auth.uid == data.playerOId);
    }

    function parentMatch(String matchId) {
      return get(/databases/$(database)/documents/matches/$(matchId));
    }

    match /matchmaking/{queueId} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn();
      allow delete: if false;
    }

    match /matches/{matchId} {
      allow create: if isParticipant(request.resource.data);
      allow read: if isParticipant(resource.data);
      allow update: if isParticipant(resource.data) &&
        request.resource.data.playerXId == resource.data.playerXId &&
        request.resource.data.playerOId == resource.data.playerOId;
      allow delete: if false;

      match /events/{eventId} {
        allow create, read: if isSignedIn() &&
          let parent = parentMatch(matchId);
          parent.exists && isParticipant(parent.data);
        allow update, delete: if false;
      }
    }
  }
}