rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Matchmaking queue document - users can read/write their own queue entries
    match /matchmaking/queue {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Matches collection - players can only access matches they're participating in
    match /matches/{matchId} {
      // Helper to check if the requesting user is a participant
      function isParticipant() {
        return isAuthenticated() && 
               (request.auth.uid in resource.data.participants);
      }
      
      // Helper to check if the requesting user will be a participant (for create)
      function willBeParticipant() {
        return isAuthenticated() && 
               (request.auth.uid in request.resource.data.participants);
      }
      
      // Allow read if user is a participant in the match
      allow read: if isParticipant();
      
      // Allow create if user will be a participant
      allow create: if willBeParticipant();
      
      // Allow update if user is a participant (for moves and state changes)
      allow update: if isParticipant();
      
      // Allow delete if user is a participant (for cleanup after match ends)
      allow delete: if isParticipant();
    }
  }
}
