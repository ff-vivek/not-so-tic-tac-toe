rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isParticipantInRequest() {
      return request.auth != null &&
        request.resource.data.participants is list &&
        request.auth.uid in request.resource.data.participants;
    }

    function isParticipant() {
      return request.auth != null &&
        resource.data.participants is list &&
        request.auth.uid in resource.data.participants;
    }

    match /matchmaking/queue {
      allow get: if true;
      allow create, update: if isSignedIn();
      allow delete: if false;
    }

    match /matches/{matchId} {
      // Allow queries and direct reads for any user, signed in or not.
      allow get, list: if true;

      // Only allow match creation when the requester is one of the participants and
      // is marked active in the playerStates map.
      allow create: if isParticipantInRequest() &&
        request.resource.data.playerStates is map &&
        request.resource.data.playerStates[request.auth.uid] == 'active';

      // Participants can update the match state or delete it when the match ends.
      allow update, delete: if isParticipant();
    }
  }
}